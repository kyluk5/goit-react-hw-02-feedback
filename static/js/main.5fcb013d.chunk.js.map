{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/SectionTitle/SectionTitle.js","components/App/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","feedBack","name","onClick","Notification","message","defaultProps","SectionTitle","App","state","getFeedback","e","persist","setState","prevState","target","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","totalV","PosV","toFixed","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAeeA,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACE,mCAASJ,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUC,GACV,gDAAsBC,EAAtB,OCSSC,EAhBS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,OACE,oCACE,4BAAQC,KAAK,OAAOC,QAASF,GAA7B,QAGA,4BAAQC,KAAK,UAAUC,QAASF,GAAhC,WAGA,4BAAQC,KAAK,MAAMC,QAASF,GAA5B,SCTAG,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,oCACE,2BAAIA,KAKKD,IAMfA,EAAaE,aAAe,CAC1BD,QAAS,qBCZX,IA2BeE,EA3BM,SAAC,GAOf,IANLN,EAMI,EANJA,SACAN,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,iCACE,qDACA,kBAAC,EAAD,CAAiBE,SAAUA,IAC3B,0CACW,IAAVH,GAAe,kBAAC,EAAD,CAAcO,QAAS,sBACtCP,EAAQ,GACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MCuBfS,E,4MA7CbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPa,YAAc,SAACC,GACbA,EAAEC,UACF,EAAKC,UAAS,SAACC,GACb,OAAO,eACJH,EAAEI,OAAOb,KAAOY,EAAUH,EAAEI,OAAOb,MAAQ,O,EAKlDc,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKT,OAAOU,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,M,EAG/DC,gCAAkC,SAACC,EAAQC,GACzC,OAASA,EAAOD,EAAU,KAAKE,QAAQ,I,uDAG/B,IAAD,EACwBC,KAAKjB,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ4B,KAAKV,qBACbjB,EAAqB2B,KAAKJ,gCAC9BxB,EACA4B,KAAKjB,MAAMd,MAGb,OACE,oCACE,kBAAC,EAAD,CACEA,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLI,SAAUyB,KAAKhB,YACfZ,MAAOA,EACPC,mBAAoBA,S,GAvCZ4B,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5fcb013d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p>Good:{good}</p>\n      <p>Neutral:{neutral}</p>\n      <p>Bad:{bad}</p>\n      <p>Total:{total}</p>\n      <p>Positive Feedback:{positivePercentage}%</p>\n    </>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ feedBack }) => {\n  return (\n    <>\n      <button name=\"good\" onClick={feedBack}>\n        Good\n      </button>\n      <button name=\"neutral\" onClick={feedBack}>\n        Neutral\n      </button>\n      <button name=\"bad\" onClick={feedBack}>\n        Bad\n      </button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  feedBack: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p>{message}</p>\n    </>\n  );\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n","import React from \"react\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Notification from \"../Notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({\n  feedBack,\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <section>\n      <h2>Please Leave Feedback</h2>\n      <FeedbackOptions feedBack={feedBack} />\n      <h3>Statistics</h3>\n      {total === 0 && <Notification message={\"No feedback given\"} />}\n      {total > 0 && (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default SectionTitle;\n\nSectionTitle.propTypes = {\n  feedBack: PropTypes.func.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  getFeedback = (e) => {\n    e.persist();\n    this.setState((prevState) => {\n      return {\n        [e.target.name]: prevState[e.target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, item) => acc + item);\n  };\n\n  countPositiveFeedbackPercentage = (totalV, PosV) => {\n    return ((PosV / totalV) * 100).toFixed(1);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(\n      total,\n      this.state.good\n    );\n\n    return (\n      <>\n        <SectionTitle\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          feedBack={this.getFeedback}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}